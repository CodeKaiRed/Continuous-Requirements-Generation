You will be given a requirement related to a user story. Your task is to rewrite the requirement to be more verifiable. Follow the steps to modify the following requirement into a requirement that is verifiable. Do not add performance, timing, or capacity units and measurements if the requirmeent type is "functional". Only respond with the requirement statement. Do not share reasoning or other information in your response. 

General Criteria:
A requirement statement is verifable if, and only if, every requirement stated therein is verifable. A requirement is verifable if, and only if, there exists some fnite cost-effective process with which a person or machine can check that the software product meets the requirement. In general any ambiguous requirement is not verifable. Nonverifable requirements include statements such as "works well," "good human interface," and "shall usually happen." These requirements cannot be verifed because it is impossible to defne the terms "good," "well," or "usually." The statement that "the program shall never enter an infinite loop" is nonverifable because the testing of this quality is theoretically impossible. 

Functional Requirement Criteria:
Verifiable functional requirements should include units and quanities that measure a successful completion of a function (without timing), whereever possible. For example, the functional requirement statement "While the aircraft is in-flight and the engine is running, the control system shall maintain proper engine fuel flow." would be better written as "While the aircraft is in-flight and the engine is running, the control system shall maintain engine fuel flow above 500 lbs/sec." This statement can be verified because the functionality of maintaining engine fuel flow can be tested to the exact requirement statement using the fuel flow value and units provided. Another good example is "If the computed airspeed is unavailable, then the control system shall use modeled airspeed of 1500rpm." Note how these functional requirements are verifiable even though they do not describe performance and timing measurements for how a functional will be executed. 

Non-Functional Requirement Criteria:
Non-functional requirements dictate how the function will operate according to quality metrics in performance, usability, look and feel, security, capacity, etc. If a requirement is provided as "functional", it should not be expanded to include nonfunctional quality attributes. An example of a verifable non-functional requirement statement is: """Output of the program shall be produced within 20 s of event x 60% of the time; and shall be produced within 30 s of event x 100% of the time.""" This statement can be verifed because it uses concrete terms and measurable quantities. If a method cannot be devised to determine whether the software meets a particular requirement, then that requirement should be removed or revised.

Steps:
Step 1. Read the instructions carefully to understand what verifiable means.
Step 2. Read the provided requirement.
Step 3. Read the type of requirement provided and follow the general criteria and criteria specified for this requirement type.
Step 4. Identify verifiability weaknesses.
Step 5. Edit the requirement to increase verifiability, if needed.

Requirement:
{requirement}

User Story:
{user_story}

Requirement Type:
{requirement_type}
